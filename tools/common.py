import struct
import os
from pathlib import Path
from math import log10
from typing import BinaryIO


def is_int(x: str) -> int:
    try:
        int(x, 0)
        return True
    except ValueError:
        return False


def auto_int(x: str) -> int:
    return int(x, 0)


def len_int(val: int):
    return int(log10(val)) + 1


def get_int(inFile: BinaryIO) -> int:
    return struct.unpack("I", inFile.read(4))[0]


def get_short(inFile: BinaryIO) -> int:
    return struct.unpack("H", inFile.read(2))[0]


def get_sshort(inFile: BinaryIO) -> int:
    return struct.unpack("h", inFile.read(2))[0]


def get_byte(inFile: BinaryIO) -> int:
    return inFile.read(1)[0]


def write_int(outFile: BinaryIO, val: int) -> None:
    writeVal = struct.pack("I", val & 0xFFFFFFFF)
    outFile.write(writeVal)


def write_short(outFile: BinaryIO, val: int) -> None:
    writeVal = struct.pack("H", val & 0xFFFF)
    outFile.write(writeVal)


def write_sshort(outFile: BinaryIO, val: int) -> None:
    writeVal = struct.pack("h", val & 0xFFFF)
    outFile.write(writeVal)


def write_byte(outFile: BinaryIO, val: int) -> None:
    writeVal = struct.pack("B", val & 0xFF)
    outFile.write(writeVal)


def make_out_path(inPath: Path, outName: Path) -> Path:
    return Path(os.path.join(os.path.dirname(inPath), os.path.basename(outName)))


def enemy_id(bt):
    idList = [
        "Megaman",
        "Mettaur1",
        "Mettaur2",
        "Mettaur3",
        "Canodumb1",
        "Canodumb2",
        "Canodumb3",
        "Vulgear",
        "Vatgear",
        "Vulgear_X",
        "Spooky1",
        "Spooky2",
        "Spooky3",
        "Beetank1",
        "Beetank2",
        "Beetank3",
        "Handy1",
        "Handy2",
        "Handy3",
        "Flappy1",
        "Flappy2",
        "Flappy3",
        "Froshell1",
        "Froshell2",
        "Froshell3",
        "HardHead1",
        "HardHead2",
        "HardHead3",
        "Swordy1",
        "Swordy2",
        "Swordy3",
        "Fishy1",
        "Fishy2",
        "Fishy3",
        "Piranha1",
        "Piranha2",
        "Piranha3",
        "AquaPuffy",
        "HeatPuffy",
        "0x27",
        "ColdBear1",
        "ColdBear2",
        "ColdBear3",
        "Cloudy1",
        "Cloudy2",
        "Cloudy3",
        "Ratty1",
        "Ratty2",
        "Ratty3",
        "Miney1",
        "Miney2",
        "Miney3",
        "Ammonicule1",
        "Ammonicule2",
        "Ammonicule3",
        "Jelly",
        "HeatJelly",
        "EarthJelly",
        "Gaia1",
        "Gaia2",
        "Gaia3",
        "Popper1",
        "Popper2",
        "Popper3",
        "Satella1",
        "Satella2",
        "Satella3",
        "Fanner1",
        "Fanner2",
        "Fanner3",
        "Remobit1",
        "Remobit2",
        "Remobit3",
        "Billy",
        "Silly",
        "Killy",
        "Prog1",
        "Prog2",
        "Prog3",
        "MegalianA",
        "MegalianH",
        "MegalianW",
        "CanDevil1",
        "CanDevil2",
        "CanDevil3",
        "BigSnake1",
        "BigSnake2",
        "BigSnake3",
        "Mosqurito1",
        "Mosqurito2",
        "Mosqurito3",
        "Poitton1",
        "Poitton2",
        "Poitton3",
        "Mole",
        "0x5F",
        "GutsManV1",
        "GutsManV2",
        "GutsManV3",
        "ProtoManV1",
        "ProtoManV2",
        "ProtoManV3",
        "WoodManV1",
        "WoodManV2",
        "WoodManV3",
        "FireManV1",
        "FireManV2",
        "FireManV3",
        "NumberManV1",
        "NumberManV2",
        "NumberManV3",
        "StoneManV1",
        "StoneManV2",
        "StoneManV3",
        "IceManV1",
        "IceManV2",
        "IceManV3",
        "SkullManV1",
        "SkullManV2",
        "SkullManV3",
        "ColorManV1",
        "ColorManV2",
        "ColorManV3",
        "BombManV1",
        "BombManV2",
        "BombManV3",
        "SharkManV1",
        "SharkManV2",
        "SharkManV3",
        "ElecManV1",
        "ElecManV2",
        "ElecManV3",
        "PharaohManV1",
        "PharaohManV2",
        "PharaohManV3",
        "ShadowManV1",
        "ShadowManV2",
        "ShadowManV3",
        "0x8A",
        "0x8B",
        "0x8C",
        "MagicManV1",
        "MagicManV2",
        "MagicManV3",
        "Bass",
        "0x91",
        "0x92",
        "LifeVirus",
        "BlueDummyV1",
        "RedDummyV1",
        "BlueDummyV2",
        "RedDummyV2",
        "BlueDummyV3",
        "RedDummyV3",
        "InvElecMan",
        "SharkManFinV1",
        "SharkManFinV2",
        "SharkManFinV3_0",
        "SharkManFinV3_1",
        "SharkManFinV3_2",
        "SharkManFinV3_3",
    ]
    return idList[bt] if bt < len(idList) and bt >= 0 else f"{bt:02X}"


def chip_id(bt: int) -> str:
    chipIdDict = {
        0x00: "Buster",
        0x01: "Cannon",
        0x02: "HiCannon",
        0x03: "M_Cannon",
        0x04: "Sword",
        0x05: "WideSwrd",
        0x06: "LongSwrd",
        0x07: "LilBomb",
        0x08: "CrosBomb",
        0x09: "BigBomb",
        0x0A: "Spreader",
        0x0B: "Bubbler",
        0x0C: "Heater",
        0x0D: "MiniBomb",
        0x0E: "Shotgun",
        0x0F: "CrossGun",
        0x10: "ShokWave",
        0x11: "SoniWave",
        0x12: "DynaWave",
        0x13: "FireTowr",
        0x14: "AquaTowr",
        0x15: "WoodTowr",
        0x16: "Quake1",
        0x17: "Quake2",
        0x18: "Quake3",
        0x19: "FireSwrd",
        0x1A: "ElecSwrd",
        0x1B: "AquaSwrd",
        0x1C: "GutsPnch",
        0x1D: "IcePunch",
        0x1E: "FtrSword",
        0x1F: "Dash",
        0x20: "KngtSwrd",
        0x21: "HeroSwrd",
        0x22: "MetGuard",
        0x25: "TriArrow",
        0x26: "TriSpear",
        0x27: "TriLance",
        0x28: "Typhoon",
        0x29: "Huricane",
        0x2A: "Cyclone",
        0x2B: "Howitzer",
        0x2C: "Thunder1",
        0x2D: "Thunder2",
        0x2E: "Thunder3",
        0x31: "Snakegg1",
        0x32: "Snakegg2",
        0x33: "Snakegg3",
        0x34: "Hammer",
        0x37: "BodyBurn",
        0x3A: "Ratton1",
        0x3B: "Ratton2",
        0x3C: "Ratton3",
        0x3D: "Lockon1",
        0x3E: "Lockon2",
        0x3F: "Lockon3",
        0x40: "X_Panel1",
        0x41: "X_Panel3",
        0x43: "Recov10",
        0x44: "Recov30",
        0x45: "Recov50",
        0x46: "Recov80",
        0x47: "Recov120",
        0x48: "Recov150",
        0x49: "Recov200",
        0x4A: "Recov300",
        0x4C: "Steal",
        0x4F: "Geddon1",
        0x50: "Geddon2",
        0x52: "Escape",
        0x53: "Interupt",
        0x54: "LifeAura",
        0x55: "AquaAura",
        0x56: "FireAura",
        0x57: "WoodAura",
        0x58: "Repair",
        0x5B: "Cloud",
        0x5C: "Cloudier",
        0x5D: "Cloudest",
        0x5E: "IceCube",
        0x5F: "RockCube",
        0x61: "TimeBom1",
        0x62: "TimeBom2",
        0x63: "TimeBom3",
        0x64: "Invis1",
        0x65: "Invis2",
        0x66: "Invis3",
        0x67: "IronBody",
        0x69: "Remobit1",
        0x6A: "Remobit2",
        0x6B: "Remobit3",
        0x6C: "BstrGard",
        0x6D: "BstrBomb",
        0x6E: "BstrSwrd",
        0x6F: "BstrPnch",
        0x70: "RingZap1",
        0x71: "RingZap2",
        0x72: "RingZap3",
        0x73: "Candle1",
        0x74: "Candle2",
        0x75: "Candle3",
        0x76: "SloGauge",
        0x77: "FstGauge",
        0x79: "Drain1",
        0x7A: "Drain2",
        0x7B: "Drain3",
        0x7C: "Mine1",
        0x7D: "Mine2",
        0x7E: "Mine3",
        0x7F: "Gaia1",
        0x80: "Gaia2",
        0x81: "Gaia3",
        0x82: "BblWrap1",
        0x83: "BblWrap2",
        0x84: "BblWrap3",
        0x85: "Wave",
        0x86: "RedWave",
        0x87: "BigWave",
        0x88: "Muramasa",
        0x89: "Dropdown",
        0x8A: "Popup",
        0x8B: "Dynamyt1",
        0x8C: "Dynamyt2",
        0x8D: "Dynamyt3",
        0x8E: "Anubis",
        0x91: "IronShld",
        0x92: "LeafShld",
        0x93: "Barrier",
        0x94: "PharoMan",
        0x95: "PharoMn2",
        0x96: "PharoMn3",
        0x97: "ShadoMan",
        0x98: "ShadoMn2",
        0x99: "ShadoMn3",
        0x9D: "MagicMan",
        0x9E: "MagicMn2",
        0x9F: "MagicMn3",
        0xA0: "Roll",
        0xA1: "Roll2",
        0xA2: "Roll3",
        0xA3: "GutsMan",
        0xA4: "GutsMan2",
        0xA5: "GutsMan3",
        0xA6: "ProtoMan",
        0xA7: "ProtoMn2",
        0xA8: "ProtoMn3",
        0xA9: "WoodMan",
        0xAA: "WoodMan2",
        0xAB: "WoodMan3",
        0xAC: "FireMan",
        0xAD: "FireMan2",
        0xAE: "FireMan3",
        0xAF: "NumbrMan",
        0xB0: "NumbrMn2",
        0xB1: "NumbrMn3",
        0xB2: "StoneMan",
        0xB3: "StoneMn2",
        0xB4: "StoneMn3",
        0xB5: "IceMan",
        0xB6: "IceMan2",
        0xB7: "IceMan3",
        0xB8: "SkullMan",
        0xB9: "SkullMn2",
        0xBA: "SkullMn3",
        0xBB: "ColorMan",
        0xBC: "ColorMn2",
        0xBD: "ColorMn3",
        0xBE: "BombMan",
        0xBF: "BombMan2",
        0xC0: "BombMan3",
        0xC1: "SharkMan",
        0xC2: "SharkMn2",
        0xC3: "SharkMn3",
        0xC4: "ElecMan",
        0xC5: "ElecMan2",
        0xC6: "ElecMan3",
        0xC7: "Bass",
    }
    return chipIdDict[bt] if bt in chipIdDict else f"0x{bt:02X}"


def chip_code(id: int) -> str:
    return "ABCDEFGHIJKLMNOPQRSTUVWXYZ*"[id] if id < 27 and id >= 0 else "None"


def element(id: int) -> str:
    elemList = ["None", "Elec", "Fire", "Water", "Wood"]
    return elemList[id] if id < len(elemList) and id >= 0 else "None"


def key_item(bt: int) -> str:
    key_item_map = {
        0x00: "PET",
        0x01: "IceBlock",
        0x02: "WaterGun",
        0x03: "SchoolID",
        0x04: "SciLabID",
        0x05: "Handle",
        0x06: "Message",
        0x07: "Response",
        0x08: "WWW_PIN",
        0x09: "BatteryA",
        0x0A: "BatteryB",
        0x0B: "BatteryC",
        0x0C: "BatteryD",
        0x0D: "BatteryE",
        0x50: "BattA_Ct",
        0x51: "BattB_Ct",
        0x52: "BattC_Ct",
        0x53: "BattD_Ct",
        0x54: "BattE_Ct",
        0x0E: "Charger",
        0x0F: "WWW_Pass",
        0x11: "Dentures",
        0x21: "★Mayl",
        0x22: "★Yai",
        0x23: "★Dex",
        0x25: "★Dad",
        0x26: "★Sal",
        0x28: "★Miyu",
        0x2B: "★Masa",
        0x2D: "★WWW",
        0x30: "/Dex",
        0x31: "/Sal",
        0x32: "/Miyu",
        0x34: "Hig_Memo",
        0x35: "Lab_Memo",
        0x36: "YuriMemo",
        0x37: "Pa_sMemo",
        0x3C: "ACDCPass",
        0x3D: "GovtPass",
        0x3E: "TownPass",
        0x40: "HPmemory",
        0x41: "PowerUP",
        0x42: "Armor",
        0x44: "HeatArmr",
        0x45: "AquaArmr",
        0x46: "WoodArmr",
    }
    return key_item_map[bt] if bt in key_item_map else f"0x{bt:02X}"

def map_id(bt: int):
    map_dict = {
        0x0000: "Map_School_Class_5A",
        0x0100: "Map_School_Class_5B",
        0x0200: "Map_School_Library",
        0x0300: "Map_School_2F_Hallway",
        0x0500: "Map_School_Class_1A",
        0x0600: "Map_School_Class_1B",
        0x0700: "Map_School_AV_Room",
        0x0800: "Map_School_Infirmary",
        0x0A00: "Map_School_1F_Hallway",
        0x0B00: "Map_School_Cross_Hallway",
        0x0C00: "Map_School_Storage",
        0x0D00: "Map_School_Staff_Lounge",
        0x0E00: "Map_School_Staff_Lounge_Hallway",
        0x0001: "Map_ACDC_Town",
        0x0101: "Map_ACDC_School_Gate",
        0x0201: "Map_ACDC_Lan_Living_Room",
        0x0301: "Map_ACDC_Lan_Room",
        0x0501: "Map_ACDC_Mayl_Living_Room",
        0x0601: "Map_ACDC_Mayl_Room",
        0x0701: "Map_ACDC_Dex_Room",
        0x0901: "Map_ACDC_Yai_Room",
        0x0B01: "Map_ACDC_Higsby",
        0x0C01: "Map_ACDC_Station",
        0x0D01: "Map_ACDC_Secret_Station",
        0x0002: "Map_Govt_Complex_Front",
        0x0102: "Map_Govt_Complex_Station",
        0x0202: "Map_Govt_Waterworks_Lobby",
        0x0302: "Map_Govt_SciLab_Lobby",
        0x0402: "Map_Govt_Complex_Hallway",
        0x0502: "Map_Govt_Yuichiro_Lab",
        0x0602: "Map_Govt_Waterworks_Office",
        0x0702: "Map_Govt_Waterworks_Control_Room",
        0x0902: "Map_Govt_Waterworks_Pump_Room",
        0x0B02: "Map_Govt_Waterworks_Purification_Room",
        0x0003: "Map_DenTown_Center",
        0x0103: "Map_DenTown_Station",
        0x0203: "Map_DenTown_Block_1",
        0x0303: "Map_DenTown_Block_2",
        0x0403: "Map_DenTown_Block_3",
        0x0503: "Map_DenTown_Block_4",
        0x0603: "Map_DenTown_Miyu_Antiques",
        0x0703: "Map_DenTown_Summer_School",
        0x0004: "Map_SciLab_Restaurant_Hallway",
        0x0104: "Map_SciLab_Restaurant",
        0x0204: "Map_SciLab_Power_Plant_Hallway",
        0x0304: "Map_SciLab_Power_Plant",
        0x0404: "Map_SciLab_Power_Plant_Control_Room",
        0x0504: "Map_SciLab_Generator_Room",
        0x0005: "Map_WWW_Base",
        0x0105: "Map_WWW_Wily_Lab",
        0x0205: "Map_WWW_Rocket_Hanger",
        0x0305: "Map_WWW_Passage_1",
        0x0405: "Map_WWW_Passage_2",
        0x0505: "Map_WWW_Passage_3",
        0x0080: "Map_School_Comp_1",
        0x0180: "Map_School_Comp_2",
        0x0280: "Map_School_Comp_3",
        0x0380: "Map_School_Comp_4",
        0x0480: "Map_School_Comp_5",
        0x0081: "Map_Oven_Comp_1",
        0x0181: "Map_Oven_Comp_2",
        0x0082: "Map_Waterworks_Comp_1",
        0x0182: "Map_Waterworks_Comp_2",
        0x0282: "Map_Waterworks_Comp_3",
        0x0382: "Map_Waterworks_Comp_4",
        0x0482: "Map_Waterworks_Comp_5",
        0x0582: "Map_Waterworks_Comp_6",
        0x0083: "Map_Traffic_Light_Comp_1",
        0x0183: "Map_Traffic_Light_Comp_2",
        0x0283: "Map_Traffic_Light_Comp_3",
        0x0383: "Map_Traffic_Light_Comp_4",
        0x0483: "Map_Traffic_Light_Comp_5",
        0x0084: "Map_Power_Plant_Comp_1",
        0x0184: "Map_Power_Plant_Comp_2",
        0x0284: "Map_Power_Plant_Comp_3",
        0x0384: "Map_Power_Plant_Comp_4",
        0x0085: "Map_WWW_Comp_1",
        0x0185: "Map_WWW_Comp_2",
        0x0285: "Map_WWW_Comp_3",
        0x0385: "Map_WWW_Comp_4",
        0x0485: "Map_WWW_Comp_5",
        0x0585: "Map_Rocket_Comp",
        0x0088: "Map_ACDC_Lan_PC",
        0x0188: "Map_ACDC_Mayl_PC",
        0x0288: "Map_ACDC_Yai_PC",
        0x0388: "Map_ACDC_Dex_PC",
        0x0089: "Map_Govt_Yuichiro_PC",
        0x0189: "Map_Govt_Lunch_Cart_Comp",
        0x008A: "Map_DenTown_Antique_Comp",
        0x008B: "Map_SciLab_Fish_Stand_Comp",
        0x008C: "Map_Other_Doghouse_Comp",
        0x018C: "Map_Other_Servbot_Comp",
        0x028C: "Map_Other_New_Game_Machine_Comp",
        0x038C: "Map_Other_Telephone_Comp",
        0x048C: "Map_Other_Car_Comp",
        0x058C: "Map_Other_Waterworks_Vending_Machine",
        0x068C: "Map_Other_Lobby_TV_Comp",
        0x078C: "Map_Other_Large_Monitor_Comp",
        0x088C: "Map_Other_Control_Equipment_Comp",
        0x098C: "Map_Other_SciLab_Vending_Machine",
        0x0A8C: "Map_Other_Recycled_PET_Comp",
        0x0B8C: "Map_Other_Big_Vase_Comp",
        0x0C8C: "Map_Other_Blackboard_Comp",
        0x0090: "Map_Internet_1",
        0x0190: "Map_Internet_2",
        0x0290: "Map_Internet_3",
        0x0390: "Map_Internet_4",
        0x0490: "Map_Undernet_1",
        0x0590: "Map_Undernet_2",
        0x0690: "Map_Undernet_3",
        0x0790: "Map_Undernet_4",
        0x0890: "Map_Undernet_5",
        0x0990: "Map_Undernet_6",
        0x0A90: "Map_Undernet_7",
        0x0B90: "Map_Undernet_8",
        0x0C90: "Map_Undernet_9",
        0x0D90: "Map_Undernet_10",
        0x0E90: "Map_Undernet_11",
        0x0F90: "Map_Undernet_12",
        0xFFFF: "Map_None",
    }
    return map_dict[bt] if bt in map_dict else f"0x{bt:04X}"
